# Generated by Django 4.2.7 on 2025-10-09 19:56

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BodyPart",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
            ],
            options={
                "db_table": "body_parts",
            },
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
            ],
            options={
                "db_table": "equipments",
            },
        ),
        migrations.CreateModel(
            name="Exercise",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("exerciseDbId", models.CharField(default="", max_length=50)),
                ("name", models.CharField(default="", max_length=255)),
                ("image_url", models.TextField(blank=True, null=True)),
                ("video_url", models.TextField(blank=True, null=True)),
                ("overview", models.TextField(blank=True, null=True)),
                ("instructions", models.TextField(blank=True, null=True)),
                (
                    "exercise_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("strength", "Strength"),
                            ("cardio", "Cardio"),
                            ("plyometrics", "Plyometrics"),
                            ("stretching", "Stretching"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "met_value",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=4),
                ),
            ],
            options={
                "db_table": "exercises",
            },
        ),
        migrations.CreateModel(
            name="Food",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                (
                    "serving_size_g",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "calories",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "protein_g",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "carbohydrates_g",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "fat_g",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
            ],
            options={
                "db_table": "foods",
            },
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
            ],
            options={
                "db_table": "ingredients",
            },
        ),
        migrations.CreateModel(
            name="Keyword",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("keyword", models.TextField(default="")),
            ],
            options={
                "db_table": "keywords",
            },
        ),
        migrations.CreateModel(
            name="MealPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                "db_table": "meal_plans",
            },
        ),
        migrations.CreateModel(
            name="MealPlanDay",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("day_number", models.IntegerField(default=1)),
                (
                    "meal_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="meal_plan_days",
                        to="api.mealplan",
                    ),
                ),
            ],
            options={
                "db_table": "meal_plan_days",
                "unique_together": {("meal_plan", "day_number")},
            },
        ),
        migrations.CreateModel(
            name="Muscle",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
            ],
            options={
                "db_table": "muscles",
            },
        ),
        migrations.CreateModel(
            name="PlanDay",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("day_number", models.IntegerField(default=1)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "plan_days",
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                ("area", models.CharField(blank=True, max_length=100, null=True)),
                ("instructions", models.TextField(blank=True, null=True)),
                ("image_url", models.TextField(blank=True, null=True)),
                ("youtube_url", models.TextField(blank=True, null=True)),
                ("source_url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "recipes",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("tag", models.CharField(default="", max_length=255)),
            ],
            options={
                "db_table": "tags",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("username", models.CharField(default="", max_length=50, unique=True)),
                ("email", models.EmailField(default="", max_length=255, unique=True)),
                ("password_hash", models.CharField(default="", max_length=255)),
                ("gender", models.CharField(blank=True, max_length=50, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("last_login_date", models.DateField(blank=True, null=True)),
                ("login_streak", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="WorkoutPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.user"
                    ),
                ),
            ],
            options={
                "db_table": "workout_plans",
            },
        ),
        migrations.CreateModel(
            name="WorkoutLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date_performed", models.DateTimeField(auto_now_add=True)),
                ("sets_performed", models.IntegerField(default=1)),
                ("reps_performed", models.IntegerField(default=1)),
                ("duration_minutes", models.IntegerField(blank=True, null=True)),
                ("calories_burned", models.IntegerField(blank=True, null=True)),
                ("perceived_effort", models.IntegerField(blank=True, null=True)),
                (
                    "exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.exercise"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.user"
                    ),
                ),
            ],
            options={
                "db_table": "workout_log",
            },
        ),
        migrations.CreateModel(
            name="UserMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date_recorded", models.DateField()),
                (
                    "weight_kg",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "height_cm",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "activity_level",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.user"
                    ),
                ),
            ],
            options={
                "db_table": "user_metrics",
            },
        ),
        migrations.CreateModel(
            name="PlanExercise",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("display_order", models.IntegerField(default=1)),
                ("sets", models.IntegerField(default=1)),
                ("reps", models.CharField(default="1", max_length=50)),
                ("rest_period_seconds", models.IntegerField(blank=True, null=True)),
                (
                    "exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.exercise"
                    ),
                ),
                (
                    "plan_day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plan_exercises",
                        to="api.planday",
                    ),
                ),
            ],
            options={
                "db_table": "plan_exercises",
                "ordering": ["display_order"],
            },
        ),
        migrations.AddField(
            model_name="planday",
            name="plan",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plan_days",
                to="api.workoutplan",
            ),
        ),
        migrations.CreateModel(
            name="NutritionLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date_eaten", models.DateTimeField()),
                (
                    "quantity",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "meal_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("breakfast", "Breakfast"),
                            ("lunch", "Lunch"),
                            ("dinner", "Dinner"),
                            ("snack", "Snack"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "food",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.food"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.user"
                    ),
                ),
            ],
            options={
                "db_table": "nutrition_log",
            },
        ),
        migrations.CreateModel(
            name="MealPlanEntry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("breakfast", "Breakfast"),
                            ("lunch", "Lunch"),
                            ("dinner", "Dinner"),
                            ("snack", "Snack"),
                        ],
                        default="breakfast",
                        max_length=50,
                    ),
                ),
                (
                    "food",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.food",
                    ),
                ),
                (
                    "meal_plan_day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="meal_plan_entries",
                        to="api.mealplanday",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.recipe",
                    ),
                ),
            ],
            options={
                "db_table": "meal_plan_entries",
            },
        ),
        migrations.AddField(
            model_name="mealplan",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.user"
            ),
        ),
        migrations.CreateModel(
            name="Goal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("goal_type", models.CharField(default="", max_length=50)),
                (
                    "target_weight_kg",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.user"
                    ),
                ),
            ],
            options={
                "db_table": "goals",
            },
        ),
        migrations.CreateModel(
            name="RelatedExercise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="main_exercise",
                        to="api.exercise",
                    ),
                ),
                (
                    "related_exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_to",
                        to="api.exercise",
                    ),
                ),
            ],
            options={
                "db_table": "related_exercises",
                "unique_together": {("exercise", "related_exercise")},
            },
        ),
        migrations.CreateModel(
            name="RecipeTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipe_tags",
                        to="api.recipe",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.tag"
                    ),
                ),
            ],
            options={
                "db_table": "recipe_tags",
                "unique_together": {("recipe", "tag")},
            },
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("measure", models.CharField(default="", max_length=255)),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.ingredient"
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipe_ingredients",
                        to="api.recipe",
                    ),
                ),
            ],
            options={
                "db_table": "recipe_ingredients",
                "unique_together": {("recipe", "ingredient")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="planday",
            unique_together={("plan", "day_number")},
        ),
        migrations.CreateModel(
            name="ExerciseMuscle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "muscle_type",
                    models.CharField(
                        choices=[
                            ("primary", "Primary"),
                            ("secondary", "Secondary"),
                            ("stabilizer", "Stabilizer"),
                        ],
                        default="primary",
                        max_length=20,
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.exercise"
                    ),
                ),
                (
                    "muscle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.muscle"
                    ),
                ),
            ],
            options={
                "db_table": "exercise_muscles",
                "unique_together": {("exercise", "muscle")},
            },
        ),
        migrations.CreateModel(
            name="ExerciseKeyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.exercise"
                    ),
                ),
                (
                    "keyword",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.keyword"
                    ),
                ),
            ],
            options={
                "db_table": "exercise_keywords",
                "unique_together": {("exercise", "keyword")},
            },
        ),
        migrations.CreateModel(
            name="ExerciseEquipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.equipment"
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.exercise"
                    ),
                ),
            ],
            options={
                "db_table": "exercise_equipments",
                "unique_together": {("exercise", "equipment")},
            },
        ),
        migrations.CreateModel(
            name="ExerciseBodyPart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "body_part",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.bodypart"
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.exercise"
                    ),
                ),
            ],
            options={
                "db_table": "exercise_body_parts",
                "unique_together": {("exercise", "body_part")},
            },
        ),
    ]
